// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: resource/game.proto

package resource

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameID int32

const (
	GameID_GAME_ID_UNSPECIFIED GameID = 0
	GameID_GAME_ID_SOLITAIRE   GameID = 1
	GameID_GAME_ID_BLACKJACK   GameID = 2
)

// Enum value maps for GameID.
var (
	GameID_name = map[int32]string{
		0: "GAME_ID_UNSPECIFIED",
		1: "GAME_ID_SOLITAIRE",
		2: "GAME_ID_BLACKJACK",
	}
	GameID_value = map[string]int32{
		"GAME_ID_UNSPECIFIED": 0,
		"GAME_ID_SOLITAIRE":   1,
		"GAME_ID_BLACKJACK":   2,
	}
)

func (x GameID) Enum() *GameID {
	p := new(GameID)
	*p = x
	return p
}

func (x GameID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameID) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_game_proto_enumTypes[0].Descriptor()
}

func (GameID) Type() protoreflect.EnumType {
	return &file_resource_game_proto_enumTypes[0]
}

func (x GameID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameID.Descriptor instead.
func (GameID) EnumDescriptor() ([]byte, []int) {
	return file_resource_game_proto_rawDescGZIP(), []int{0}
}

type GameStatus int32

const (
	GameStatus_GAME_STATUS_UNSPECIFIED GameStatus = 0
	GameStatus_GAME_STATUS_PLAYING     GameStatus = 1
	GameStatus_GAME_STATUS_FINISHED    GameStatus = 2
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "GAME_STATUS_UNSPECIFIED",
		1: "GAME_STATUS_PLAYING",
		2: "GAME_STATUS_FINISHED",
	}
	GameStatus_value = map[string]int32{
		"GAME_STATUS_UNSPECIFIED": 0,
		"GAME_STATUS_PLAYING":     1,
		"GAME_STATUS_FINISHED":    2,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_game_proto_enumTypes[1].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_resource_game_proto_enumTypes[1]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_resource_game_proto_rawDescGZIP(), []int{1}
}

type GameResult int32

const (
	GameResult_GAME_RESULT_UNSPECIFIED GameResult = 0
	GameResult_GAME_RESULT_WIN         GameResult = 1
	GameResult_GAME_RESULT_LOSE        GameResult = 2
	GameResult_GAME_RESULT_DRAW        GameResult = 3
)

// Enum value maps for GameResult.
var (
	GameResult_name = map[int32]string{
		0: "GAME_RESULT_UNSPECIFIED",
		1: "GAME_RESULT_WIN",
		2: "GAME_RESULT_LOSE",
		3: "GAME_RESULT_DRAW",
	}
	GameResult_value = map[string]int32{
		"GAME_RESULT_UNSPECIFIED": 0,
		"GAME_RESULT_WIN":         1,
		"GAME_RESULT_LOSE":        2,
		"GAME_RESULT_DRAW":        3,
	}
)

func (x GameResult) Enum() *GameResult {
	p := new(GameResult)
	*p = x
	return p
}

func (x GameResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameResult) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_game_proto_enumTypes[2].Descriptor()
}

func (GameResult) Type() protoreflect.EnumType {
	return &file_resource_game_proto_enumTypes[2]
}

func (x GameResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameResult.Descriptor instead.
func (GameResult) EnumDescriptor() ([]byte, []int) {
	return file_resource_game_proto_rawDescGZIP(), []int{2}
}

type GameSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	GameId     GameID                 `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3,enum=resource.GameID" json:"game_id,omitempty"`
	Status     GameStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=resource.GameStatus" json:"status,omitempty"`
	Result     GameResult             `protobuf:"varint,4,opt,name=result,proto3,enum=resource.GameResult" json:"result,omitempty"`
	Wager      int64                  `protobuf:"varint,5,opt,name=wager,proto3" json:"wager,omitempty"`
	Payout     int64                  `protobuf:"varint,6,opt,name=payout,proto3" json:"payout,omitempty"`
	StartedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=finished_at,json=finishedAt,proto3,oneof" json:"finished_at,omitempty"`
}

func (x *GameSession) Reset() {
	*x = GameSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSession) ProtoMessage() {}

func (x *GameSession) ProtoReflect() protoreflect.Message {
	mi := &file_resource_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSession.ProtoReflect.Descriptor instead.
func (*GameSession) Descriptor() ([]byte, []int) {
	return file_resource_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameSession) GetGameId() GameID {
	if x != nil {
		return x.GameId
	}
	return GameID_GAME_ID_UNSPECIFIED
}

func (x *GameSession) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *GameSession) GetResult() GameResult {
	if x != nil {
		return x.Result
	}
	return GameResult_GAME_RESULT_UNSPECIFIED
}

func (x *GameSession) GetWager() int64 {
	if x != nil {
		return x.Wager
	}
	return 0
}

func (x *GameSession) GetPayout() int64 {
	if x != nil {
		return x.Payout
	}
	return 0
}

func (x *GameSession) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *GameSession) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

var File_resource_game_proto protoreflect.FileDescriptor

var file_resource_game_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xee, 0x02, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x61, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x40, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x2a, 0x4f, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x13, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x44, 0x5f,
	0x53, 0x4f, 0x4c, 0x49, 0x54, 0x41, 0x49, 0x52, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4a, 0x41, 0x43, 0x4b,
	0x10, 0x02, 0x2a, 0x5c, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x6a, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b,
	0x0a, 0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x57, 0x49, 0x4e, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x4c, 0x4f, 0x53, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x03, 0x42, 0x86, 0x01, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x6b, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x62, 0x6f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0xca, 0x02, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0xe2, 0x02, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_game_proto_rawDescOnce sync.Once
	file_resource_game_proto_rawDescData = file_resource_game_proto_rawDesc
)

func file_resource_game_proto_rawDescGZIP() []byte {
	file_resource_game_proto_rawDescOnce.Do(func() {
		file_resource_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_game_proto_rawDescData)
	})
	return file_resource_game_proto_rawDescData
}

var file_resource_game_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_resource_game_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resource_game_proto_goTypes = []any{
	(GameID)(0),                   // 0: resource.GameID
	(GameStatus)(0),               // 1: resource.GameStatus
	(GameResult)(0),               // 2: resource.GameResult
	(*GameSession)(nil),           // 3: resource.GameSession
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_resource_game_proto_depIdxs = []int32{
	0, // 0: resource.GameSession.game_id:type_name -> resource.GameID
	1, // 1: resource.GameSession.status:type_name -> resource.GameStatus
	2, // 2: resource.GameSession.result:type_name -> resource.GameResult
	4, // 3: resource.GameSession.started_at:type_name -> google.protobuf.Timestamp
	4, // 4: resource.GameSession.finished_at:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_resource_game_proto_init() }
func file_resource_game_proto_init() {
	if File_resource_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resource_game_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GameSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resource_game_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_game_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_game_proto_goTypes,
		DependencyIndexes: file_resource_game_proto_depIdxs,
		EnumInfos:         file_resource_game_proto_enumTypes,
		MessageInfos:      file_resource_game_proto_msgTypes,
	}.Build()
	File_resource_game_proto = out.File
	file_resource_game_proto_rawDesc = nil
	file_resource_game_proto_goTypes = nil
	file_resource_game_proto_depIdxs = nil
}
